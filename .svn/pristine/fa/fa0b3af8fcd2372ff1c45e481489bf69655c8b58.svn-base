package Dialogos;

import Conexion.ExeSql;
import Formularios.fmMain;
import static Formularios.fmMain.intNivelUsuario;
import java.awt.HeadlessException;
//import java.awt.event.ActionEvent;
//import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
//import javax.swing.table.TableModel;
//import org.apache.commons.math3.util.Precision;

/**
 *
 * @author Roberto Lopez
 */
public class jdPrestamos extends javax.swing.JDialog {
    boolean click = false; 
    int Autorizado = 0;
    
    Calendar cal = Calendar.getInstance();
    Date hoy = new Date();
    int item = 0;
    int year  = cal.get(Calendar.YEAR);
    int month = cal.get(Calendar.MONTH)+1;
    int nuevo = 1;
    
    int Id2 = 0;
  
    String Dv = "";
    
    DecimalFormat formateador = new DecimalFormat("###,###");
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    
    DefaultTableModel Tabla;
    
    public jdPrestamos(java.awt.Frame parent, boolean modal) {
        
       super(parent, modal);
       initComponents();
       
      
       
       DefaultTableCellRenderer renderer2 = (DefaultTableCellRenderer)Grilla.getTableHeader().getDefaultRenderer();    //centra encabezados de columnas
       renderer2.setHorizontalAlignment(JLabel.CENTER); 
        
       DefaultTableCellRenderer Alinear2 = new DefaultTableCellRenderer();                         //configura centrado datos de columnas  
       Alinear2.setHorizontalAlignment(SwingConstants.CENTER);
       
       DefaultTableCellRenderer Alinear3 = new DefaultTableCellRenderer();                         //configura centrado datos de columnas  
       Alinear3.setHorizontalAlignment(SwingConstants.RIGHT);
        
       
       Grilla.getColumnModel().getColumn(0).setCellRenderer(Alinear3);
       Grilla.getColumnModel().getColumn(2).setCellRenderer(Alinear3);
       
       Grilla.getColumnModel().getColumn(1).setCellRenderer(Alinear2);
       Grilla.getColumnModel().getColumn(3).setCellRenderer(Alinear2);
       Grilla.getColumnModel().getColumn(4).setCellRenderer(Alinear2);
       
       
        
//       for (int i = 0; i < 4;i++){
//        
//           Grilla.getColumnModel().getColumn(i).setCellRenderer(Alinear2);       //centra datos de columnas
//        
//       }
       
         
     //********************************************************************************//    
        for (int c = 0; c < Grilla.getColumnCount(); c++){
            
            Class<?> col_class = Grilla.getColumnClass(c);
            Grilla.setDefaultEditor(col_class, null);                                       // Tabla queda "enabled", pero no "editable"
        }
        
     //********************************************************************************//   
      
       btEliminar.setEnabled(false);
        
    }
   
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbAgno = new javax.swing.JComboBox<String>();
        cbMes = new javax.swing.JComboBox<String>();
        btCargar = new javax.swing.JButton();
        txRut = new javax.swing.JTextField();
        btIr = new javax.swing.JButton();
        txNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btNuevo = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        btAutorizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Grilla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMinimumSize(new java.awt.Dimension(890, 0));
        jPanel1.setName(""); // NOI18N

        cbAgno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AÃ‘O", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028" }));
        cbAgno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAgnoActionPerformed(evt);
            }
        });

        cbMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MES", "ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE" }));
        cbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMesActionPerformed(evt);
            }
        });

        btCargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos22/Cargar.png"))); // NOI18N
        btCargar.setText("CARGAR");
        btCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargarActionPerformed(evt);
            }
        });

        txRut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txRutActionPerformed(evt);
            }
        });
        txRut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txRutKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txRutKeyTyped(evt);
            }
        });

        btIr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/search16.png"))); // NOI18N
        btIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIrActionPerformed(evt);
            }
        });

        txNombre.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txNombreKeyReleased(evt);
            }
        });

        jLabel2.setText("Rut");

        jLabel3.setText("Nombre");

        btNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Nuevo.png"))); // NOI18N
        btNuevo.setText("NUEVO");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        btEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar.png"))); // NOI18N
        btEliminar.setText("ELIMINAR");
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        btAutorizar.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btAutorizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos16/ok_16.png"))); // NOI18N
        btAutorizar.setText("Autorizar");
        btAutorizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btAutorizar.setBorderPainted(false);
        btAutorizar.setEnabled(false);
        btAutorizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAutorizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbAgno, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btCargar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEliminar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(btIr, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 393, Short.MAX_VALUE)
                                .addComponent(btAutorizar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(194, 194, 194))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbAgno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btIr, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btAutorizar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Monto PrÃ©stamo", "NÂ° Cuotas", "Valor Cuota", "Desde", "Hasta", "Observaciones", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Grilla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrillaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Grilla);
        if (Grilla.getColumnModel().getColumnCount() > 0) {
            Grilla.getColumnModel().getColumn(0).setMinWidth(100);
            Grilla.getColumnModel().getColumn(0).setPreferredWidth(100);
            Grilla.getColumnModel().getColumn(0).setMaxWidth(100);
            Grilla.getColumnModel().getColumn(1).setMinWidth(80);
            Grilla.getColumnModel().getColumn(1).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(1).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(2).setMinWidth(90);
            Grilla.getColumnModel().getColumn(2).setPreferredWidth(90);
            Grilla.getColumnModel().getColumn(2).setMaxWidth(90);
            Grilla.getColumnModel().getColumn(3).setMinWidth(80);
            Grilla.getColumnModel().getColumn(3).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(3).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(4).setMinWidth(80);
            Grilla.getColumnModel().getColumn(4).setPreferredWidth(80);
            Grilla.getColumnModel().getColumn(4).setMaxWidth(80);
            Grilla.getColumnModel().getColumn(5).setMinWidth(550);
            Grilla.getColumnModel().getColumn(5).setPreferredWidth(550);
            Grilla.getColumnModel().getColumn(5).setMaxWidth(550);
            Grilla.getColumnModel().getColumn(6).setMinWidth(0);
            Grilla.getColumnModel().getColumn(6).setPreferredWidth(0);
            Grilla.getColumnModel().getColumn(6).setMaxWidth(0);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAgnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAgnoActionPerformed

    }//GEN-LAST:event_cbAgnoActionPerformed

    private void cbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMesActionPerformed

    }//GEN-LAST:event_cbMesActionPerformed

    private void btCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargarActionPerformed
        
        btAutorizar.setEnabled(false); 
        
        if (cbAgno.getSelectedIndex() == 0){
        
            fmMain.Mensaje("Debe elegir un AÃ±o");
            return;
        }
        
        if (cbMes.getSelectedIndex() == 0){
        
            fmMain.Mensaje("Debe elegir un Mes");
            return;
        }
        
//        if(Integer.parseInt(cbAgno.getSelectedItem().toString()) > year){       //Si el aÃ±o elegido es mayor al aÃ±o en curso
//       
//           fmMain.Mensaje("AÃ±o fuera de rango!!");                              //El aÃ±o estÃ¡ fuera de rango porque aÃºn no hay registros.
//           return;
//        }
        
        if (txRut.getText().equals("")){
        
            fmMain.Mensaje("Debe Ingresar Rut del Trabajador");
            return;
        }
        
        fmMain.LimpiaGrilla((DefaultTableModel) Grilla.getModel());              //Se limpia la Tabla   
          
        
        ExeSql Sql = new ExeSql();
        ExeSql Sql2 = new ExeSql();
        ResultSet Rs,Rs2;
        
   //********************************************************************************************************     
            
        Tabla = (DefaultTableModel) Grilla.getModel();
            
        try {
            
            
            Rs = Sql.Select("SELECT rut, tipo, dfecha FROM personal_plhx \n" +
                            "WHERE rut="+ txRut.getText().trim() + "\n" +
                            "AND tipo = 5 \n" +
                            "ORDER BY dfecha DESC LIMIT 1");
            
             if (Sql.GetRowCount() > 0){
             
                 Id2 = 0;
                 
                 Rs.next();
                 
                 String dfecha = Rs.getString("dfecha");
                 
                 System.out.println("FECHA ES : "+dfecha);
                 
                // String agno = dfecha.toString().substring(0, 4);
                 String mes = dfecha.toString().substring(5, 7);
                 String dia = dfecha.toString().substring(8);
                
                 Id2 = Integer.parseInt(mes+dia)+1;
                 
                 System.out.println("EL CODIGO ES : "+Id2);
             
             }
            
            Rs2 = Sql2.Select("SELECT * FROM personal_plhx \n"+
                              "WHERE rut=" + txRut.getText().trim() + "\n" +
                              "AND tipo = 5 \n" +
                              "AND EXTRACT(YEAR FROM dfecha)<= "+cbAgno.getSelectedItem() + "\n"+
                              "AND (EXTRACT(MONTH FROM dfecha)>= "+cbMes.getSelectedIndex() + " OR EXTRACT(MONTH FROM dfecha)<= "+cbMes.getSelectedIndex() + ")\n"+  
                              "AND EXTRACT(YEAR FROM hfecha) >= "+cbAgno.getSelectedItem() + "\n"+
                              "AND (EXTRACT(MONTH FROM hfecha)>= "+cbMes.getSelectedIndex() + " OR EXTRACT(MONTH FROM hfecha)<= "+cbMes.getSelectedIndex() + ")\n"+  
                              "ORDER BY dfecha ASC");
            
            if (Sql2.GetRowCount() > 0){
                  
                while (Rs2.next()){
                    
                    Tabla.addRow(new Object[]{Rs2.getString("monto"),Rs2.getString("cuotas"), Rs2.getString("ndias_horas"),
                                              dateFormat.format(Rs2.getDate("dfecha")),dateFormat.format(Rs2.getDate("hfecha")),
                                              Rs2.getString("observacion"),Rs2.getString("id")});
                          
                }
               
              
            }
                
        }catch (SQLException ex) {
            
            Logger.getLogger(jdPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btCargarActionPerformed

    private void txRutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txRutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txRutActionPerformed

    private void txRutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txRutKeyPressed
        
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            btIr.doClick();
        }
    }//GEN-LAST:event_txRutKeyPressed

    private void txRutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txRutKeyTyped

        char validar = evt.getKeyChar();    //CÃ³digo agregado por R. Lopez
        
        if (Character.isLetter(validar)){   //se valida que solo se ingresen

            evt.consume();                  //nÃºmeros al textfield "txRut"
        }

        if(txRut.getText().length()>=8) {  //se valida que solo se ingresen

            evt.consume();                 //un mÃ¡ximo de 8 digitos al textfield "txRut"

        }                                  //Fin cÃ³digo agregado
    }//GEN-LAST:event_txRutKeyTyped

    private void btIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIrActionPerformed
        
        if (!txRut.getText().isEmpty() && txNombre.getText().isEmpty()) {  //se agrego filtro a sentencia IF

            CargaPersonal(txRut.getText().trim());                         //si rut no estÃ  vacÃ­o y nombre estÃ¡ vacÃ­o

        }else{

            jdAgregaPersonas Dato = new jdAgregaPersonas(null, true);      //si rut y nombre estÃ¡n vacÃ¬os
            Dato.setLocationRelativeTo(null);
            Dato.setTitle("Trabajador");
            Dato.CargaDatos("SELECT rut AS codigo,nombre,dvp FROM personal WHERE rut > 1000 AND activo = true AND empresa = 1 ORDER BY nombre");
            Dato.setVisible(true);
            CargaPersonal(Dato.GetCodigo());
        }
    }//GEN-LAST:event_btIrActionPerformed

    public void CargaPersonal(String Rut) { 
    
        ExeSql Sql = new ExeSql();
        ResultSet Rs;
                   
        try{
 
            Rs = Sql.Select("SELECT * FROM personal WHERE rut=" + Rut);
          
            if(Sql.GetRowCount()>0){
                
                Rs.next();
                
                txRut.setText(Rs.getString("rut").trim());
                Dv = Rs.getString("dvp").trim();
                txNombre.setText(Rs.getString("nombre").trim()+" "+Rs.getString("apellidopaterno").trim()+" "+Rs.getString("apellidomaterno").trim());
                
            }else{
                
                fmMain.Mensaje("El Rut no existe");
                
            }
           
        }catch (Exception e) {
            
            System.out.println(e.getMessage());
            
        }finally{
            
           Sql.Close();
        }
    
    }
    
    private void txNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNombreKeyReleased

        txNombre.setText(txNombre.getText().toUpperCase());
    }//GEN-LAST:event_txNombreKeyReleased

    private void GrillaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrillaMouseClicked
        
        DefaultTableModel Tabla = (DefaultTableModel) Grilla.getModel();
        
        if(evt.getClickCount()==2){
           
          jdPersonal_prestamos prestamos = new jdPersonal_prestamos(null,false);
          prestamos.setLocationRelativeTo(null);
          
//        prestamos.setTitle("Nuevo Registro");
        
          prestamos.SetRegistro(1,
                                txRut.getText(),
                                Dv,
                                txNombre.getText(),
                                Grilla.getValueAt(Grilla.getSelectedRow(),0).toString(),
                                Grilla.getValueAt(Grilla.getSelectedRow(),1).toString(),
                                Grilla.getValueAt(Grilla.getSelectedRow(),2).toString(),
                                Grilla.getValueAt(Grilla.getSelectedRow(),3).toString(),
                                Grilla.getValueAt(Grilla.getSelectedRow(),4).toString(),
                                Grilla.getValueAt(Grilla.getSelectedRow(),5).toString(),
                                Grilla.getValueAt(Grilla.getSelectedRow(),6).toString());
          
           prestamos.setVisible(true); 
           
           if(prestamos.GetRegistro()!=null){
                   
                Tabla.insertRow(Grilla.getSelectedRow(), prestamos.GetRegistro());
                Tabla.removeRow(Grilla.getSelectedRow());
                   
                btCargar.doClick();   
           }
                      
           
        }else if(evt.getClickCount()==1){ 
           
            if (( intNivelUsuario < 100)){    
           
                btEliminar.setEnabled(false); 
                btAutorizar.setEnabled(false);
        
            }else {  
        
                btEliminar.setEnabled(true);
                btAutorizar.setEnabled(true);
            }
        
        }
    
    
    }//GEN-LAST:event_GrillaMouseClicked

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        
      
        if (cbAgno.getSelectedIndex() == 0){
        
            fmMain.Mensaje("Debe elegir un AÃ±o");
            return;
        }
        
        if (cbMes.getSelectedIndex() == 0){
        
            fmMain.Mensaje("Debe elegir un Mes");
            return;
        }
        
        if(Integer.parseInt(cbAgno.getSelectedItem().toString()) > year){       //Si el aÃ±o elegido es mayor al aÃ±o en curso
       
           fmMain.Mensaje("AÃ±o fuera de rango!!");                              //El aÃ±o estÃ¡ fuera de rango porque aÃºn no hay registros.
           return;
        }
        
        if (txRut.getText().equals("")){
        
            fmMain.Mensaje("Debe Ingresar Rut del Trabajador");
            return;
        }
        
        jdPersonal_prestamos prestamos = new jdPersonal_prestamos(null,true);
        prestamos.setLocationRelativeTo(null);
          
        prestamos.setTitle("Nuevo Registro");
        
        Date dfecha = Calendar.getInstance().getTime();  
        String fecha = dateFormat.format(dfecha);
        
        prestamos.SetRegistro(0,
                              txRut.getText(),
                              Dv,
                              txNombre.getText(),
                              "",
                              "",
                              "",
                              fecha,
                              fecha,
                              "",
                              "");
          
        prestamos.setVisible(true); 
        
        if(prestamos.GetRegistro()!=null){

            btCargar.doClick();   
        }
        
        
        
    }//GEN-LAST:event_btNuevoActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
       
        intNivelUsuario = fmMain.trae_nivel(fmMain.GetUsuario());
        
     
        if (( intNivelUsuario < 100)){    
           
           fmMain.Mensaje("Usuario: " + fmMain.GetUsuario() + " no estÃ¡ autorizado") ;
           return;
        
        } 
        
        if(fmMain.OkCancel("EstÃ¡ seguro de eliminar registro?") == JOptionPane.OK_OPTION){                      //Se solicita confirmaciÃ³n de la eliminacion
            
            ExeSql Sql = new ExeSql();
           
            try{
                Sql.ExeSql("DELETE FROM personal_plhx \n"+                                                      //Se elimina el registro de la BD
                           "WHERE id ='"+ Tabla.getValueAt(Grilla.getSelectedRow(), 6) +"' \n"+   
                           "AND rut="+ txRut.getText());
                
                Tabla.removeRow(Grilla.getSelectedRow());                           //Se borra el registro de la Grilla
                        
            
            }catch (SQLException ex) {
          
                Logger.getLogger(jdPrestamos.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }     
         
        btEliminar.setEnabled(false);
        
    }//GEN-LAST:event_btEliminarActionPerformed

    private void btAutorizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAutorizarActionPerformed

        if(fmMain.OkCancel("Â¿Autorizar Gasto?") == JOptionPane.OK_OPTION){

            ExeSql Sql = new ExeSql();
            ExeSql Sql3 = new ExeSql();
            ResultSet Rs3;
            
            
            String Query3 = "";
            
            try {
                   
                Query3 = "SELECT * FROM prv_cuentasxpagar cxp \n" +
                         "WHERE cxp.tipdocto IN ('PRE')\n" +
                         "AND cxp.rut ="+txRut.getText().trim()+ "\n"+
                         "AND cxp.monto ="+Grilla.getValueAt(Grilla.getSelectedRow(),0).toString() + "\n"+
                         "AND cxp.nrodocto ="+Id2;
                        
                
                Rs3 = Sql3.Select(Query3);
                
                if (Sql3.GetRowCount()>0){ 
               
                   Autorizado = 1;
                  
                }else if (Sql3.GetRowCount() == 0){
                
                    Autorizado = 0;
                
                } 
               
                if (Autorizado == 1){

                    JOptionPane.showMessageDialog(null,"El Gasto ya fue Autorizado!!");
                    return;

                }

                Sql.ExeSql("INSERT INTO prv_cuentasxpagar\n"
                         + "(rut,tipdocto,nrodocto,fpago,monto,tipo,nrocuota,tipopago) \n"
                         + "VALUES ("
                         + txRut.getText().toString().trim() + ","
                         + "'PRE',"
                         + Id2 + ",'"
                         + dateFormat.format(hoy) + "',"
                         + Grilla.getValueAt(Grilla.getSelectedRow(), 0).toString().trim() + ","
                         + 0 +","
                         + 1 +","
                         + 2 + ")");

                Sql.Commit();


                JOptionPane.showMessageDialog(null,"Gasto Autorizado");

                Autorizado = 1;

            }catch (SQLException | HeadlessException e) {

                fmMain.Mensaje(e.getMessage());

                Sql.Rollback();
                Autorizado = 0;

            }finally{

                Sql.Close();
            }

        }
    }//GEN-LAST:event_btAutorizarActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jdPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jdPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jdPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jdPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
      
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grilla;
    private javax.swing.JButton btAutorizar;
    public javax.swing.JButton btCargar;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btIr;
    private javax.swing.JButton btNuevo;
    private javax.swing.JComboBox<String> cbAgno;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txRut;
    // End of variables declaration//GEN-END:variables
}